# ssh_bad_boys:
#   < authlog awk '/Failed.*user/ { print $13 } /Failed.*root/ { $11 }'|sort -u|sed -e's%$%/32,%g'|xargs
# check & load:
#   doas pfctl -nf ./pf.conf && doas rsync pf.conf /etc/pf.conf && doas pfctl -f /etc/pf.conf

net_int="192.168.223.0/24"

ext_if="em0"
int_if="em2"

ext_services="{ ssh }"
dmz_services="{ domain, ntp, ssh }"
int_services="{ domain, ntp, ssh, tftp }"

dmz="100.36.223.10 - 100.36.223.14"

set loginterface $ext_if
set skip on lo

# default to block and log, no return packets
block drop log

# proxy all ftp
pass in quick inet proto tcp to port ftp divert-to 127.0.0.1 port 8021

# anchors
anchor "ftp-proxy/*"

# external interface
# TODO(IPv6)
block drop quick on $ext_if inet6
block drop log on $ext_if

pass in quick on $ext_if proto tcp from any to ($ext_if) port $ext_services keep state
pass in quick on $ext_if proto { tcp, udp } from $dmz to ($ext_if) port $dmz_services keep state

pass out quick on $ext_if proto tcp from ($ext_if) to any port $ext_services modulate state
pass out quick on $ext_if proto { tcp, udp } from ($ext_if) to $dmz port $dmz_services modulate state

# selectively pass only expected outbound traffic
pass out quick on $ext_if proto udp from ($ext_if) to any port { domain, ntp } keep state
pass out quick on $ext_if proto tcp from ($ext_if) to any port { domain, ftp, http, https, ntp, ssh } modulate state
pass out quick on $ext_if proto tcp from ($ext_if) to any modulate state
pass out quick on $ext_if inet proto icmp from ($ext_if) to any icmp-type 8 code 0 keep state

# nat outbound internal traffic
pass out quick on $ext_if from ($int_if:network) to any nat-to ($ext_if)

# sietchtabr internal interface/downlink
block drop log quick on $int_if inet proto udp from any to $int_if:broadcast port { 32412, 32414 }
block return log on $int_if

# respond to pings internally
pass in quick on $int_if inet proto icmp from any to ($int_if) icmp-type 8 code 0 keep state

# provide services internally
pass in quick on $int_if proto udp from ($int_if:network) to ($int_if) port $int_services keep state
pass in quick on $int_if proto tcp from ($int_if:network) to ($int_if) port $int_services modulate state

# allow dhcp internally
pass in quick on $int_if inet proto udp from { 0.0.0.0, $net_int } port 68 to { ($int_if), 255.255.255.255 } port 67 keep state

# allow outbound traffic internally
pass in quick on $int_if from ($int_if:network) to ! ($int_if:network) keep state

pass out on $int_if keep state
