#	$OpenBSD: pf.conf,v 1.53 2014/01/25 10:28:36 dtucker Exp $
#
# See pf.conf(5) for syntax and examples.
# Remember to set net.inet.ip.forwarding=1 and/or net.inet6.ip6.forwarding=1
# in /etc/sysctl.conf if packets are to be forwarded between interfaces.
# ssh_bad_boys:
# < authlog awk '/Failed.*user/ { print $13 } /Failed.*root/ { $11 }'|sort -u|sed -e's%$%/32,%g'|xargs

# increase default state limit from 10'000 states on busy systems
#set limit states 100000

int_if="vether1"
ext_if="vether0"

ext_services="{ ssh }"
int_services="{ domain, ntp, ssh }"
int_noise="{ ssdp }"

uplink_noise="{ ssdp }"

ext_net="96.88.251.136/27"
int_net="192.168.223.0/24"

uplink_if="em0"
ext_ifs="{ em0, em1 }"
int_ifs="{ em2, em3, em4, em5, em6, em7 }"

ext_br="{ bridge0 }"
int_br="{ bridge1 }"

upnp_mcast="239.255.255.250/32"
ssh_bad_boys="{ 96.43.97.252/32 }"

otheym_int="192.168.223.2"
otheym_ext="96.88.251.141"
otheym_if="em1"
otheym_services="{ l2tp, ipsec-nat-t, isakmp, ipsec-msft }"
otheym_noise="{ ssdp }"

ap_int="192.168.223.3"
chani_int="192.168.223.4"
ps3_int="192.168.223.5"
hawat_int="192.168.223.6"
thufir_int="192.168.223.7"
shadeout_int="192.168.223.8"
lightbulbs="{ 192.168.223.20, 192.168.223.21, 192.168.223.22, 192.168.223.23 }"


vpn_peers="{ 69.55.65.205 }"

set skip on lo

# silence inbound noise from uplink
block drop quick on $uplink_if proto { tcp, udp } from any to any port $uplink_noise
block drop quick on $uplink_if proto { icmp6, igmp }

# silence all brodcast externally
block drop quick on $ext_ifs from any to 255.255.255.255

block drop quick from $ssh_bad_boys to any
block return log	# block stateless traffic

# pass on bridges
pass in on $ext_br from any to $ext_net
pass out on $ext_br from $ext_net to any
pass on $int_br inet
pass on $int_br inet6

# drop lightbulb traffic
block quick on $int_ifs from $lightbulbs to any
block quick on $int_ifs from any to $lightbulbs

# pass on interfaces
pass out on $uplink_if from $ext_net to any
pass in on $uplink_if from any to $ext_net
pass on $int_ifs inet
pass on $int_ifs inet6

# filter rules and anchor for ftp-proxy(8)
anchor "ftp-proxy/*"
pass in quick inet proto tcp to port ftp divert-to 127.0.0.1 port 8021

pass quick on $ext_if from $ps3_int to any binat-to 96.88.251.139
pass out quick on $ext_if from $int_net to any nat-to 96.88.251.138

# anchor for relayd(8)
#anchor "relayd/*"

pass out on $ext_if from $ext_if to any keep state
pass in on $ext_if proto { tcp, udp } from any to $ext_if:0 port $ext_services

block in quick on $otheym_if from any to 255.255.255.255
block in quick on $otheym_if proto { tcp, udp } from any to any port $otheym_noise
pass in on $otheym_if from $otheym_ext to any keep state
pass out on $otheym_if proto { tcp, udp } from any to $otheym_ext port $otheym_services
pass out on $otheym_if inet proto icmp from any to $otheym_ext icmp-type 8 code 0
pass out on $otheym_if proto { ah, esp } from any to $otheym_ext

block in quick on $int_if proto { tcp, udp } from any to any port $int_noise
pass out on $int_if from $int_if to any keep state
pass on $int_if proto udp from any to any port { bootpc, bootps }
pass in on $int_if inet proto icmp from any to $int_if:0 icmp-type 8 code 0
pass in on $int_if proto { tcp, udp } from any to $int_if:0 port $int_services keep state
pass in on $int_if from $int_net to ! $int_net keep state
# multicast
pass out on $int_if from any to 224.0.0.0/4 keep state
pass out on $int_if from any to ff02::fb keep state
# broadcast
pass out on $int_if from $int_net to $int_if:broadcast

# vpn
pass in on $ext_if proto udp from any to $ext_net port { 500, 4500, 1701 }
#pass in on $ext_if proto tcp from any to $ext_net port { 1701 }
pass in on $ext_if inet proto icmp from any to $ext_if icmp-type echoreq
pass in on $ext_if proto { ah, esp } from $vpn_peers

# rules for spamd(8)
#table <spamd-white> persist
#table <nospamd> persist file "/etc/mail/nospamd"
#pass in on egress proto tcp from any to any port smtp \
#    rdr-to 127.0.0.1 port spamd
#pass in on egress proto tcp from <nospamd> to any port smtp
#pass in log on egress proto tcp from <spamd-white> to any port smtp
#pass out log on egress proto tcp to any port smtp


#block in quick from urpf-failed to any	# use with care

# By default, do not permit remote connections to X11
block return in on ! lo0 proto tcp to port 6000:6010
