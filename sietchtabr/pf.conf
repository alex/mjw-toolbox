# check & load:
#   doas pfctl -nf ./pf.conf && doas rsync pf.conf /etc/pf.conf && doas pfctl -f /etc/pf.conf

# All ports save em7 are bridged with external interface.
br="{ bridge0 }"
br_ifs="{ em0, em1, em2, em3, em4, em5, em6 }"

# external interface
ext="vether0"

ext_services="{ domain, http, https, ssh }"

set loginterface $ext

set skip on lo

# default to block and log, no return packets
block drop log	# default to block and log

# find some bogons:
#   < authlog awk '/Failed.*user/ { print $13 } /Failed.*root/ { $11 }'|sort -u|sed -e's%$%/32,%g'|xargs
table <private> const { 10/8, 100.64.0.0/10, 172.16/12, 192.0.0/24, 192.168/16, 198.18/15 }
table <bogons> counters persist file "/etc/pf.bogons"

# drop any inbound bogon stuff, at the bridge
block drop in log quick on $br inet from { <private>, <bogons> } to any

# otherwise, bridge is transparent
pass quick on $br
pass quick on $br_ifs

# sietchtabr's external interface
block drop quick on $ext inet6
block drop in log quick on $ext inet from { <private>, <bogons> } to any
block drop log on $ext

pass in quick on $ext proto $ext_protos from any to ($ext)
pass in quick on $ext proto { tcp, udp } from any to ($ext) port $ext_services keep state

# selectively pass only expected outbound traffic
pass out quick on $ext proto $ext_protos from ($ext) to any
pass out quick on $ext proto { tcp, udp } from ($ext) to any port $ext_services keep state
pass out quick on $ext proto udp from ($ext) to any port { domain, ntp } keep state
pass out quick on $ext proto tcp from ($ext) to any port { domain, http, https, ssh } modulate state
pass out quick on $ext inet proto icmp from ($ext) to any icmp-type 8 code 0 keep state
